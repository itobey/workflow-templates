name: Release Workflow

on:
  workflow_call:
    inputs:
      release_version:
        description: 'Version number for the release'
        required: true
        default: '1.0.0'
        type: string
      snapshot_version:
        description: 'Version number for the next snapshot'
        required: true
        default: '1.0.1-SNAPSHOT'
        type: string
      image_name:
        description: 'Name of the image'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Update version in pom.xml to release version
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.release_version }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ github.event.inputs.image_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Package
          path: target/

      - name: Set image name as env
        run: echo "IMAGE_NAME=${{ inputs.image_name }}" >> $GITHUB_ENV

      - name: Update version in pom.xml to release version
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.release_version }}

      - name: Extract version from pom.xml
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build multi-platform Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}
          docker buildx build . \
            --file docker/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --tag $IMAGE_ID:${{ env.VERSION }} \
            --tag $IMAGE_ID:latest \
            --push

  set-snapshot-version:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update version in pom.xml to snapshot version
        run: mvn versions:set -DnewVersion=${{ github.event.inputs.snapshot_version }}

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add pom.xml
          git commit -m "Update to snapshot version ${{ github.event.inputs.snapshot_version }}"
          git push
